version: '3'

services:
# VS code in browser
# IDE for development running in docker and
# accessed in browser
  vscode:
    build: 
      context: ./Dockerfiles
      dockerfile: Dockerfile.vscode
    container_name: vscode
    image: vscode:latest
    ports:
      - "8080:8080"
    volumes:
      - vscode:/home/coder/.local/share/code-server
      - repo:/DRL4RESTRepo
      - ${VOL_DIR}/.gitconfig:/home/coder/.gitconfig
    command: ["--auth", "none", "/DRL4RESTRepo"]

# apigenerator downloads the ready-made api generator
# from the openapitools
  apigenerator:
    image: openapitools/openapi-generator-cli:latest
    volumes:
      - repo:/DRL4RESTRepo
      - log:${APP_ROOT}/log
      - src:${APP_ROOT}/src
      - scripts:${APP_ROOT}/scripts
    stdin_open: true
    tty: true

# rl-gym
  rlgym:
    build: 
      context: ./Dockerfiles
      dockerfile: Dockerfile.rlgym
    container_name: rlgym
    image: rlgym:latest
    ports:
      - "8888:8888"
    volumes:
      - log:${APP_ROOT}/log
      - src:${APP_ROOT}/src
      - scripts:${APP_ROOT}/scripts
  # python
  pyclient:
    build: 
      context: ./Dockerfiles
      dockerfile: Dockerfile.python3
    container_name: pyclient
    image: python3:latest
    volumes:
      - log:${APP_ROOT}/log
      - src:${APP_ROOT}/src
      - scripts:${APP_ROOT}/scripts
      - openapi:${APP_ROOT}/openapi
    stdin_open: true
    tty: true
  # python
  pyserver:
    build: 
      context: ./Dockerfiles
      dockerfile: Dockerfile.python3
    container_name: pyserver
    image: python3:latest
    ports: # HOST:CONTAINER
      - "8000:8080"
    volumes:
      - log:${APP_ROOT}/log
      - src:${APP_ROOT}/src
      - scripts:${APP_ROOT}/scripts
      - openapi:${APP_ROOT}/openapi
    stdin_open: true
    tty: true
  # jupyter scipy docker image
  jupyscipy:
    build: 
      context: ./Dockerfiles
      dockerfile: Dockerfile.jupyscipy
    container_name: jupyscipy
    image: jupyscipy:latest
    ports: # HOST:CONTAINER
      - "8008:8888"
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - log:${APP_ROOT}/log
      - src:${APP_ROOT}/src
      - scripts:${APP_ROOT}/scripts
      - notebooks:/home/jovyan/work
    command: ["start.sh", "jupyter", "lab", "--LabApp.token=''"]

#    command: ["start.sh", "jupyter lab", "--LabApp.token=''"]


#
# Volume definition
# Note the "ipc" volume for sharing UNIX sockets.
# 
volumes:
  repo:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}
  vscode:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}/vscode
  log:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}/log
  src:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}/src
  scripts:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}/scripts
  openapi:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}/openapi
  notebooks:
    driver_opts:
      type: none
      o: bind
      device: ${VOL_DIR}/notebooks

